services:
  nginx:
    container_name: eco-nginx
    image: nginx:1.27-alpine
    restart: unless-stopped
    user: root
    depends_on:
      - backend
    links:
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./eco-frontend:/var/www/eco/eco-frontend"
      - "./config/certs/:/etc/nginx/certs"
      - "./config/nginx/:/etc/nginx/conf.d/"
  backend:
    container_name: eco-backend
    working_dir: "/var/www/eco/eco-backend"
    restart: unless-stopped
    build:
      context: "./eco-backend"
      dockerfile: Dockerfile
    volumes:
      - "./config/php/php.ini:/usr/local/etc/php/php.ini"
      - "./eco-backend:/var/www/eco/eco-backend"
  posts-service:
    container_name: eco-posts-service
    working_dir: "/var/www/eco/eco-posts-service"
    restart: unless-stopped
    build:
      context: "./eco-posts-service"
      dockerfile: Dockerfile
    volumes:
      - "./config/php/php.ini:/usr/local/etc/php/php.ini"
      - "./eco-posts-service:/var/www/eco/eco-posts-service"
  comments-service:
    container_name: eco-comments-service
    working_dir: "/var/www/eco/eco-comments-service"
    restart: unless-stopped
    build:
      context: "./eco-comments-service"
      dockerfile: Dockerfile
    volumes:
      - "./config/php/php.ini:/usr/local/etc/php/php.ini"
      - "./eco-comments-service:/var/www/eco/eco-comments-service"
  social-service:
    container_name: eco-social-service
    working_dir: "/var/www/eco/eco-social-service"
    restart: unless-stopped
    build:
      context: "./eco-social-service"
      dockerfile: Dockerfile
    volumes:
      - "./config/php/php.ini:/usr/local/etc/php/php.ini"
      - "./eco-social-service:/var/www/eco/eco-social-service"
  frontend:
    container_name: eco-frontend
    restart: unless-stopped
    build:
      context: "./eco-frontend"
      dockerfile: Dockerfile
    volumes:
      - "./eco-frontend:/var/www/eco/eco-frontend"
  s3-upload-service:
    container_name: eco-s3-upload-service
    working_dir: "/var/www/eco/eco-s3-upload-service"
    restart: unless-stopped
    build:
      context: "./eco-s3-upload-service"
      dockerfile: Dockerfile
    volumes:
      - "./eco-s3-upload-service:/var/www/eco/eco-s3-upload-service"
  achievement-service:
    container_name: eco-achievement-service
    working_dir: "/var/www/eco/eco-achievement-service"
    restart: unless-stopped
    build:
      context: "./eco-achievement-service"
      dockerfile: Dockerfile
    volumes:
      - "./eco-achievement-service:/var/www/eco/eco-achievement-service"
  db:
    container_name: eco-database
    image: postgis/postgis:16-3.4-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - "/var/www/eco/postgis-data:/var/lib/postgresql/data"
  posts-db:
    container_name: eco-posts-db
    image: postgis/postgis:16-3.4-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - "/var/www/eco/postgis-posts-data:/var/lib/postgresql/data"
  mongodb:
    container_name: eco-mongodb
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: comments
    ports:
      - "27017:27017"
    volumes:
      - "/var/www/eco/mongo-posts-data:/data/db"
  redis:
    container_name: eco-redis
    image: redis:latest
    restart: always
    volumes:
      - "/var/www/eco/redis:/root/redis"
      - "/var/www/eco/redis/redis.conf:/usr/local/etc/redis/redis.conf"
    environment:
      REDIS_PASSWORD: root
  rabbitmq:
    container_name: eco-rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASSWORD: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 5672:5672
      - 15672:15672
  supervisor:
    container_name: eco-supervisor
    build:
      context: ./config/supervisor
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./eco-achievement-service:/var/www/eco/eco-achievement-service
      - ./config/supervisor/default.conf:/etc/supervisor/supervisord.conf
