## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first:
        name: first
        description: 'Must be at least 1. Must not be greater than 30.'
        required: true
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: true
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      post_id:
        name: post_id
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first: 21
      page: 67
      post_id: aut
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The post id field must be a valid ULID.","errors":{"post_id":["The post id field must be a valid ULID."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts/comment
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment:
        name: comment
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xumwfoyyzwaqakwaddmdzzydy
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      post_id:
        name: post_id
        description: ''
        required: true
        example: aliquid
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      comment: xumwfoyyzwaqakwaddmdzzydy
      post_id: aliquid
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/posts/reply
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      post_comment_id:
        name: post_comment_id
        description: ''
        required: true
        example: mollitia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      comment:
        name: comment
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cwvhgdvxyhijikb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      post_comment_id: mollitia
      comment: cwvhgdvxyhijikb
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/videos
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first:
        name: first
        description: 'Must be at least 1. Must not be greater than 30.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: true
        example: 85
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      video_id:
        name: video_id
        description: ''
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first: 12
      page: 85
      video_id: maiores
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The video id field must be a valid ULID.","errors":{"video_id":["The video id field must be a valid ULID."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/videos/comment
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment:
        name: comment
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vrcuhtanjmxphitubati
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      video_id:
        name: video_id
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      comment: vrcuhtanjmxphitubati
      video_id: omnis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/videos/reply
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      video_comment_id:
        name: video_comment_id
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      comment:
        name: comment
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ositd
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      video_comment_id: eveniet
      comment: ositd
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/notes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first:
        name: first
        description: 'Must be at least 1. Must not be greater than 30.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: true
        example: 59
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      note_id:
        name: note_id
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first: 16
      page: 59
      note_id: consequatur
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The note id field must be a valid ULID.","errors":{"note_id":["The note id field must be a valid ULID."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/notes/comment
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment:
        name: comment
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gkxbfxuaeevhqjgketllz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      note_id:
        name: note_id
        description: ''
        required: true
        example: nobis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      comment: gkxbfxuaeevhqjgketllz
      note_id: nobis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/notes/reply
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      note_comment_id:
        name: note_comment_id
        description: ''
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      comment:
        name: comment
        description: 'Must not be greater than 255 characters.'
        required: true
        example: wiu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      note_comment_id: veritatis
      comment: wiu
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/reaction
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: note_comment
        type: string
        enumValues:
          - post_comment
          - video_comment
          - post_comment_reply
          - video_comment_reply
          - note_comment
          - note_comment_reply
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      reaction_type:
        name: reaction_type
        description: ''
        required: true
        example: dislike
        type: string
        enumValues:
          - like
          - dislike
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      type: note_comment
      id: voluptatem
      reaction_type: dislike
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
